{"version":3,"sources":["Pagination.tsx","App.tsx","index.tsx"],"names":["Pagination","total","perPage","page","onPageChange","onPrevBtn","onNextBtn","displayPagination","arrOfNumbers","i","Math","ceil","push","fromNumToArr","className","href","classNames","disabled","onClick","map","el","active","App","useState","content","currentPage","setCurrentPage","presentPage","ReactDOM","render","document","getElementById"],"mappings":"kNAsFeA,EAzEqB,SAAC,GAO9B,IANLC,EAMI,EANJA,MACAC,EAKI,EALJA,QACAC,EAII,EAJJA,KACAC,EAGI,EAHJA,aACAC,EAEI,EAFJA,UACAC,EACI,EADJA,UAcMC,EAXe,WAGnB,IAFA,IAAMC,EAAyB,GAEtBC,EAAI,EAAGA,GAAKC,KAAKC,KAAKV,EAAQC,GAAUO,GAAK,EACpDD,EAAaI,KAAKH,GAGpB,OAAOD,EAIiBK,GAE1B,OACE,qBACE,aAAW,0BACXC,UAAU,UAFZ,SAIE,qBAAIA,UAAU,aAAd,UAEE,mBACEC,KAAK,IACL,aAAW,WACXD,UAAWE,IAAW,mBAAoB,CACxCC,SAAUd,GAAQ,IAEpBe,QAAS,kBAAMb,EAAUF,IAN3B,SAQE,sBAAM,cAAY,OAAlB,oBAGDI,EAAkBY,KAAI,SAAAC,GAAE,OACvB,oBAEEN,UAAWE,IAAW,mBAAoB,CACxCK,OAAQD,IAAOjB,IAHnB,SAME,mBACEY,KAAK,IACLD,UAAU,mBACVI,QAAS,kBAAMd,EAAagB,IAH9B,SAKGA,KAVEA,MAeT,mBACEN,UAAWE,IAAW,mBAAoB,CACxCC,SAAUd,GAAQ,IAEpBY,KAAK,IACL,aAAW,OACXG,QAAS,kBAAMZ,EAAUH,IAN3B,SAQE,sBAAM,cAAY,OAAlB,0BC1CKmB,EAhCO,WACpB,MAAkBC,mBAAS,IAApBC,EAAP,oBACA,EAAkBD,mBAAS,GAApBrB,EAAP,oBACA,EAAsCqB,mBAAS,GAA/C,mBAAOE,EAAP,KAAoBC,EAApB,KAcA,OACE,qCACE,4CACA,cAAC,EAAD,CACEzB,MAAOuB,EACPtB,QAASA,EACTC,KAAMsB,EACNrB,aAnBc,SAACuB,GACnBD,EAAeC,IAmBXtB,UAhBgB,SAACsB,GACrBD,EAAeC,EAAc,IAgBzBrB,UAbgB,SAACqB,GACrBD,EAAeC,EAAc,UCfjCC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.59be2ce4.chunk.js","sourcesContent":["/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React from 'react';\nimport classNames from 'classnames';\n\ninterface Props {\n  total: number,\n  perPage: number,\n  page: number,\n  onPageChange: (presentPage: number) => void,\n  onPrevBtn: (presentPage: number) => void,\n  onNextBtn: (presentPage: number) => void,\n}\n\nconst Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  page,\n  onPageChange,\n  onPrevBtn,\n  onNextBtn,\n}) => {\n  // Make an Array of numbers from the total variable\n  const fromNumToArr = () => {\n    const arrOfNumbers: number[] = [];\n\n    for (let i = 1; i <= Math.ceil(total / perPage); i += 1) {\n      arrOfNumbers.push(i);\n    }\n\n    return arrOfNumbers;\n  };\n\n  // Array of numbers which display pagination buttons\n  const displayPagination = fromNumToArr();\n\n  return (\n    <nav\n      aria-label=\"Page navigation example\"\n      className=\"nav-bar\"\n    >\n      <ul className=\"pagination\">\n\n        <a\n          href=\"#\"\n          aria-label=\"Previous\"\n          className={classNames('pagination__prev', {\n            disabled: page <= 1,\n          })}\n          onClick={() => onPrevBtn(page)}\n        >\n          <span aria-hidden=\"true\">&laquo;</span>\n        </a>\n\n        {displayPagination.map(el => (\n          <li\n            key={el}\n            className={classNames('pagination__item', {\n              active: el === page,\n            })}\n          >\n            <a\n              href=\"#\"\n              className=\"pagination__link\"\n              onClick={() => onPageChange(el)}\n            >\n              {el}\n            </a>\n          </li>\n        ))}\n\n        <a\n          className={classNames('pagination__next', {\n            disabled: page >= 9,\n          })}\n          href=\"#\"\n          aria-label=\"Next\"\n          onClick={() => onNextBtn(page)}\n        >\n          <span aria-hidden=\"true\">&raquo;</span>\n        </a>\n\n      </ul>\n    </nav>\n  );\n};\n\nexport default Pagination;\n","import React, { useState } from 'react';\nimport './App.css';\nimport Pagination from './Pagination';\n\nconst App: React.FC = () => {\n  const [content] = useState(43);\n  const [perPage] = useState(5);\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const handleClick = (presentPage: number) => {\n    setCurrentPage(presentPage);\n  };\n\n  const handlePrevBtn = (presentPage: number) => {\n    setCurrentPage(presentPage - 1);\n  };\n\n  const handleNextBtn = (presentPage: number) => {\n    setCurrentPage(presentPage + 1);\n  };\n\n  return (\n    <>\n      <h1>Pagination</h1>\n      <Pagination\n        total={content}\n        perPage={perPage}\n        page={currentPage}\n        onPageChange={handleClick}\n        onPrevBtn={handlePrevBtn}\n        onNextBtn={handleNextBtn}\n      />\n    </>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}